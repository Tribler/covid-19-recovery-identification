buildscript {
  // Buildscript is evaluated before everything else so we can't use getExtOrDefault
  def kotlin_version = rootProject.ext.has('kotlinVersion') ? rootProject.ext.get('kotlinVersion') : project.properties['Ipv8Service_kotlinVersion']

  repositories {
    google()
    jcenter()
  }

  dependencies {
    classpath 'com.android.tools.build:gradle:4.0.2'
    // noinspection DifferentKotlinGradleVersion
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

def getExtOrDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties['Ipv8Service_' + name]
}

def getExtOrIntegerDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties['Ipv8Service_' + name]).toInteger()
}

android {
  compileSdkVersion getExtOrIntegerDefault('compileSdkVersion')
  buildToolsVersion getExtOrDefault('buildToolsVersion')
  defaultConfig {
    minSdkVersion 16
    targetSdkVersion getExtOrIntegerDefault('targetSdkVersion')
    versionCode 1
    versionName "1.0"
  }
  buildTypes {
    release {
      minifyEnabled false
    }
  }
  lintOptions {
    disable 'GradleCompatible'
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}

repositories {
  mavenCentral()
  jcenter()
  google()

  def found = false
  def defaultDir = null
  def androidSourcesName = 'React Native sources'

  if (rootProject.ext.has('reactNativeAndroidRoot')) {
    defaultDir = rootProject.ext.get('reactNativeAndroidRoot')
  } else {
    defaultDir = new File(
      projectDir,
      '/../../../node_modules/react-native/android'
    )
  }

  if (defaultDir.exists()) {
    maven {
      url defaultDir.toString()
      name androidSourcesName
    }

    logger.info(":${project.name}:reactNativeAndroidRoot ${defaultDir.canonicalPath}")
    found = true
  } else {
    def parentDir = rootProject.projectDir

    1.upto(5, {
      if (found) return true
      parentDir = parentDir.parentFile

      def androidSourcesDir = new File(
        parentDir,
        'node_modules/react-native'
      )

      def androidPrebuiltBinaryDir = new File(
        parentDir,
        'node_modules/react-native/android'
      )

      if (androidPrebuiltBinaryDir.exists()) {
        maven {
          url androidPrebuiltBinaryDir.toString()
          name androidSourcesName
        }

        logger.info(":${project.name}:reactNativeAndroidRoot ${androidPrebuiltBinaryDir.canonicalPath}")
        found = true
      } else if (androidSourcesDir.exists()) {
        maven {
          url androidSourcesDir.toString()
          name androidSourcesName
        }

        logger.info(":${project.name}:reactNativeAndroidRoot ${androidSourcesDir.canonicalPath}")
        found = true
      }
    })
  }

  if (!found) {
    throw new GradleException(
      "${project.name}: unable to locate React Native android sources. " +
        "Ensure you have you installed React Native as a dependency in your project and try again."
    )
  }
}

def kotlin_version = getExtOrDefault('kotlinVersion')

dependencies {
  // noinspection GradleDynamicVersion
  api 'com.facebook.react:react-native:+'
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

// TODO Merge both files!
//apply plugin: "com.android.application"
//apply plugin: 'kotlin-android'
//apply plugin: "com.chaquo.python"
//apply plugin: "checkstyle"
//apply plugin: "pmd"
//apply plugin: 'jacoco'
//apply from: "../../node_modules/react-native/react.gradle"
//
//import com.android.build.OutputFile
//
///**
// * Set this to true to create two separate APKs instead of one:
// *   - An APK that only works on ARM devices
// *   - An APK that only works on x86 devices
// * The advantage is the size of the APK is reduced by about 4MB.
// * Upload all the APKs to the Play Store and people will download
// * the correct one based on the CPU architecture of their device.
// */
//def enableSeparateBuildPerCPUArchitecture = false
//
//android {
//  compileSdkVersion rootProject.ext.compileSdkVersion
//
//  compileOptions {
//    sourceCompatibility rootProject.ext.sourceCompatibility
//    targetCompatibility rootProject.ext.targetCompatibility
//  }
//
//  defaultConfig {
//    applicationId rootProject.ext.applicationId
//    minSdkVersion rootProject.ext.minSdkVersion
//    targetSdkVersion rootProject.ext.targetSdkVersion
//    versionCode rootProject.ext.versionCode
//    versionName rootProject.ext.versionName
//    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//    python {
//      pip {
//        install "-r", "src/main/python/requirements.txt"
//      }
//    }
//    ndk {
//      abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
//    }
//    missingDimensionStrategy 'react-native-camera', 'general'
//    multiDexEnabled true
//  }
//
//  splits {
//    abi {
//      reset()
//      enable enableSeparateBuildPerCPUArchitecture
//      universalApk false  // If true, also generate a universal APK
//      include "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
//    }
//  }
//
//  signingConfigs {
//    debug {
//      storeFile file("debug.keystore")
//      storePassword "android"
//      keyAlias "androiddebugkey"
//      keyPassword "android"
//    }
//  }
//
//  buildTypes {
//    debug {
//      signingConfig signingConfigs.debug
//      testCoverageEnabled = true
//    }
//    release {
//      // Caution! In production, you need to generate your own keystore file.
//      // see https://facebook.github.io/react-native/docs/signed-apk-android.
//      signingConfig signingConfigs.debug
//      minifyEnabled true
//      shrinkResources true
//      proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
//    }
//  }
//
//  packagingOptions {
//    pickFirst "lib/armeabi-v7a/libc++_shared.so"
//    pickFirst "lib/arm64-v8a/libc++_shared.so"
//    pickFirst "lib/x86/libc++_shared.so"
//    pickFirst "lib/x86_64/libc++_shared.so"
//  }
//
//  testOptions {
//    unitTests {
//      includeAndroidResources = true
//    }
//  }
//
//  // applicationVariants are e.g. debug, release
//  applicationVariants.all { variant ->
//    variant.outputs.each { output ->
//      // For each separate APK per architecture, set a unique version code as described here:
//      // https://developer.android.com/studio/build/configure-apk-splits.html
//      def versionCodes = ["armeabi-v7a": 1, "x86": 2, "arm64-v8a": 3, "x86_64": 4]
//      def abi = output.getFilter(OutputFile.ABI)
//      if (abi != null) {  // null for the universal-debug, universal-release variants
//        output.versionCodeOverride =
//          versionCodes.get(abi) * 1048576 + defaultConfig.versionCode
//      }
//    }
//  }
//}
//
//dependencies {
//  implementation fileTree(dir: "libs", include: ["*.jar"])
//
//  implementation "androidx.appcompat:appcompat:1.2.0"
//  androidTestImplementation "androidx.test.ext:junit:1.1.2"
//  androidTestImplementation "androidx.test:rules:1.3.0"
//
//  implementation "com.android.support:multidex:1.0.3"
//  implementation "com.facebook.react:react-native:0.62.2"
//
//  //noinspection GradleDynamicVersion
//  implementation "org.webkit:android-jsc:+"
//  implementation "androidx.core:core-ktx:1.3.2"
//  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
//}
//
// TODO Fix config location!
//task checkstyle(type: Checkstyle) {
//  checkstyle.toolVersion "8.33"
//  configFile file("${project.rootDir}/config/checkstyle/checkstyle.xml")
//  source fileTree("src/main/java")
//  include "**/*.java"
//  exclude "**/gen/**"
//  classpath = files()
//  showViolations true
//  reports {
//    xml.enabled = true
//    html.enabled = true
//  }
//}
//
//task pmd(type: Pmd) {
//  pmd.consoleOutput = true
//  source = fileTree("src/main/java")
//  include "**/*.java"
//  exclude "**/gen/**"
//  reports {
//    xml.enabled = false
//    html.enabled = true
//  }
//}
//
//apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle")
//applyNativeModulesAppBuildGradle(project)
//repositories {
//  mavenCentral()
//}

// TODO Reuse anything important!
// Top-level build file where you can add configuration options common to all sub-projects/modules.
//buildscript {
//  ext {
//    applicationId = 'nl.tudelft.immune'
//    kotlin_version = '1.4.10'
//    buildToolsVersion = "30.0.2"
//    minSdkVersion = 21
//    compileSdkVersion = 30
//    targetSdkVersion = 30
//    sourceCompatibility = JavaVersion.VERSION_1_8
//    targetCompatibility = JavaVersion.VERSION_1_8
//    versionCode = 1
//    versionName = "1.0"
//  }
//  repositories {
//    google()
//    jcenter()
//    maven { url "https://chaquo.com/maven" }
//  }
//  dependencies {
//    classpath('com.android.tools.build:gradle:4.0.2')
//    classpath('com.chaquo.python:gradle:8.0.1')
//    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
//  }
//}
//
//allprojects {
//  repositories {
//    mavenLocal()
//    maven {
//      // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
//      url("$rootDir/../node_modules/react-native/android")
//    }
//    maven {
//      // Android JSC is installed from npm
//      url("$rootDir/../node_modules/jsc-android/dist")
//    }
//    google()
//    jcenter()
//    maven { url 'https://jitpack.io' }
//  }
//}
